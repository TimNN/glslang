310.frag
Warning, version 310 is not yet complete; most version-specific features are present, but some are missing.
ERROR: 0:8: 'origin_upper_left' : not supported with this profile: es
ERROR: 0:8: 'pixel_center_integer' : not supported with this profile: es
ERROR: 0:8: 'gl_FragCoord' : identifiers starting with "gl_" are reserved 
ERROR: 0:11: 'location' : overlapping use of location 2
ERROR: 0:15: 'usampler2DRect' : Reserved word. 
ERROR: 0:15: 'sampler/image' : type requires declaration of default precision qualifier 
ERROR: 0:23: 'variable indexing sampler array' : not supported with this profile: es
ERROR: 0:27: 'textureGatherOffsets' : no matching overloaded function found 
ERROR: 0:27: '=' :  cannot convert from 'const float' to 'mediump 4-component vector of uint'
ERROR: 0:30: 'textureGatherOffset(...)' : must be a compile-time constant: component argument
ERROR: 0:31: 'textureGatherOffset(...)' : must be 0, 1, 2, or 3: component argument
ERROR: 0:42: 'texel offset' : argument must be compile-time constant 
ERROR: 0:44: 'texel offset' : value is out of range: [gl_MinProgramTexelOffset, gl_MaxProgramTexelOffset]
ERROR: 0:44: 'texel offset' : value is out of range: [gl_MinProgramTexelOffset, gl_MaxProgramTexelOffset]
ERROR: 0:45: 'texel offset' : value is out of range: [gl_MinProgramTexelOffset, gl_MaxProgramTexelOffset]
ERROR: 0:45: 'texel offset' : value is out of range: [gl_MinProgramTexelOffset, gl_MaxProgramTexelOffset]
ERROR: 0:69: 'binding' : requires block, or sampler/image, or atomic-counter type 
ERROR: 0:73: 'location' : location is too large 
ERROR: 0:77: 'location' : too large for fragment output 
ERROR: 0:78: 'location' : too large for fragment output 
ERROR: 0:78: 'location' : overlapping use of location 40
ERROR: 0:79: 'non-literal layout-id value' : not supported with this profile: es
ERROR: 0:79: 'layout-id value' : cannot be negative 
ERROR: 0:99: 'writeonly' : argument cannot drop memory qualifier when passed to formal parameter 
ERROR: 0:102: 'out' : cannot be bool 
ERROR: 0:103: 'image2D' : sampler/image types can only be used in uniform variables or function parameters: imageOut
ERROR: 0:103: '' : image variables not declared 'writeonly' must have a format layout qualifier 
ERROR: 0:104: 'out' : cannot be a matrix 
ERROR: 28 compilation errors.  No code generated.


Shader version: 310
using early_fragment_tests
ERROR: node is still EOpNull!
0:21  Function Definition: main( (void)
0:21    Function Parameters: 
0:23    Sequence
0:23      Sequence
0:23        move second child to first child (highp 4-component vector of float)
0:23          'v' (mediump 4-component vector of float)
0:23          Function Call: texture(s21;vf2; (highp 4-component vector of float)
0:23            indirect index (highp sampler2D)
0:23              'arrayedSampler' (uniform 5-element array of highp sampler2D)
0:23              'i' (uniform mediump int)
0:23            'c2D' (smooth in mediump 2-component vector of float)
0:28      Sequence
0:28        move second child to first child (highp 4-component vector of float)
0:28          'v4' (mediump 4-component vector of float)
0:28          Function Call: textureGather(s21;vf2; (highp 4-component vector of float)
0:28            direct index (highp sampler2D)
0:28              'arrayedSampler' (uniform 5-element array of highp sampler2D)
0:28              Constant:
0:28                0 (const int)
0:28            'c2D' (smooth in mediump 2-component vector of float)
0:29      Sequence
0:29        move second child to first child (mediump 4-component vector of int)
0:29          'iv4' (mediump 4-component vector of int)
0:29          Function Call: textureGatherOffset(isA21;vf3;vi2;i1; (mediump 4-component vector of int)
0:29            'isamp2DA' (uniform highp isampler2DArray)
0:29            Constant:
0:29              0.100000
0:29              0.100000
0:29              0.100000
0:29            Constant:
0:29              1 (const int)
0:29              1 (const int)
0:29            Constant:
0:29              3 (const int)
0:30      move second child to first child (mediump 4-component vector of int)
0:30        'iv4' (mediump 4-component vector of int)
0:30        Function Call: textureGatherOffset(isA21;vf3;vi2;i1; (mediump 4-component vector of int)
0:30          'isamp2DA' (uniform highp isampler2DArray)
0:30          Constant:
0:30            0.100000
0:30            0.100000
0:30            0.100000
0:30          Constant:
0:30            1 (const int)
0:30            1 (const int)
0:30          'i' (uniform mediump int)
0:31      move second child to first child (mediump 4-component vector of int)
0:31        'iv4' (mediump 4-component vector of int)
0:31        Function Call: textureGatherOffset(isA21;vf3;vi2;i1; (mediump 4-component vector of int)
0:31          'isamp2DA' (uniform highp isampler2DArray)
0:31          Constant:
0:31            0.100000
0:31            0.100000
0:31            0.100000
0:31          Constant:
0:31            1 (const int)
0:31            1 (const int)
0:31          Constant:
0:31            4 (const int)
0:32      move second child to first child (mediump 4-component vector of int)
0:32        'iv4' (mediump 4-component vector of int)
0:32        Function Call: textureGatherOffset(isA21;vf3;vi2;i1; (mediump 4-component vector of int)
0:32          'isamp2DA' (uniform highp isampler2DArray)
0:32          Constant:
0:32            0.100000
0:32            0.100000
0:32            0.100000
0:32          Constant:
0:32            1 (const int)
0:32            1 (const int)
0:32          Constant:
0:32            3 (const int)
0:33      move second child to first child (mediump 4-component vector of int)
0:33        'iv4' (mediump 4-component vector of int)
0:33        Function Call: textureGatherOffset(isA21;vf3;vi2; (mediump 4-component vector of int)
0:33          'isamp2DA' (uniform highp isampler2DArray)
0:33          Constant:
0:33            0.100000
0:33            0.100000
0:33            0.100000
0:33          Construct ivec2 (2-component vector of int)
0:33            'i' (uniform mediump int)
0:38  Function Definition: foo23( (void)
0:38    Function Parameters: 
0:?     Sequence
0:42      Function Call: textureProjGradOffset(us21;vf4;vf2;vf2;vi2; (mediump 4-component vector of uint)
0:42        'usamp2d' (uniform highp usampler2D)
0:42        'outp' (out mediump 4-component vector of float)
0:42        Constant:
0:42          0.000000
0:42          0.000000
0:42        Constant:
0:42          0.000000
0:42          0.000000
0:42        Convert float to int (2-component vector of int)
0:42          'c2D' (smooth in mediump 2-component vector of float)
0:43      Function Call: textureProjGradOffset(us21;vf4;vf2;vf2;vi2; (mediump 4-component vector of uint)
0:43        'usamp2d' (uniform highp usampler2D)
0:43        'outp' (out mediump 4-component vector of float)
0:43        Constant:
0:43          0.000000
0:43          0.000000
0:43        Constant:
0:43          0.000000
0:43          0.000000
0:43        Constant:
0:43          3 (const int)
0:43          4 (const int)
0:44      Function Call: textureProjGradOffset(us21;vf4;vf2;vf2;vi2; (mediump 4-component vector of uint)
0:44        'usamp2d' (uniform highp usampler2D)
0:44        'outp' (out mediump 4-component vector of float)
0:44        Constant:
0:44          0.000000
0:44          0.000000
0:44        Constant:
0:44          0.000000
0:44          0.000000
0:44        Constant:
0:44          15 (const int)
0:44          16 (const int)
0:45      Function Call: textureProjGradOffset(us21;vf4;vf2;vf2;vi2; (mediump 4-component vector of uint)
0:45        'usamp2d' (uniform highp usampler2D)
0:45        'outp' (out mediump 4-component vector of float)
0:45        Constant:
0:45          0.000000
0:45          0.000000
0:45        Constant:
0:45          0.000000
0:45          0.000000
0:45        Constant:
0:45          -10 (const int)
0:45          20 (const int)
0:47      Test condition and select (void)
0:47        Condition
0:47        'gl_HelperInvocation' (in bool)
0:47        true case
0:48        Pre-Increment (mediump 4-component vector of float)
0:48          'outp' (out mediump 4-component vector of float)
0:50      Sequence
0:50        move second child to first child (mediump int)
0:50          'sum' (mediump int)
0:50          Constant:
0:50            32 (const int)
0:58      move second child to first child (bool)
0:58        'b1' (bool)
0:58        mix (bool)
0:58          'b2' (bool)
0:58          'b3' (bool)
0:58          'b' (bool)
0:59      Sequence
0:59        move second child to first child (mediump 3-component vector of uint)
0:59          'um3' (mediump 3-component vector of uint)
0:59          mix (mediump 3-component vector of uint)
0:59            Construct uvec3 (mediump 3-component vector of uint)
0:59              Convert int to uint (mediump uint)
0:59                'i' (uniform mediump int)
0:59            Construct uvec3 (mediump 3-component vector of uint)
0:59              Convert int to uint (mediump uint)
0:59                'i' (uniform mediump int)
0:59            Construct bvec3 (3-component vector of bool)
0:59              'b' (bool)
0:60      Sequence
0:60        move second child to first child (mediump 4-component vector of int)
0:60          'im4' (mediump 4-component vector of int)
0:60          mix (mediump 4-component vector of int)
0:60            Construct ivec4 (mediump 4-component vector of int)
0:60              'i' (uniform mediump int)
0:60            Construct ivec4 (mediump 4-component vector of int)
0:60              'i' (uniform mediump int)
0:60            Construct bvec4 (4-component vector of bool)
0:60              'b' (bool)
0:94  Function Definition: foots( (void)
0:94    Function Parameters: 
0:96    Sequence
0:96      Sequence
0:96        move second child to first child (highp 2-component vector of int)
0:96          'v2' (highp 2-component vector of int)
0:96          Function Call: textureSize(s21;i1; (highp 2-component vector of int)
0:96            's1' (layout(binding=3 ) uniform highp sampler2D)
0:96            Constant:
0:96              2 (const int)
0:97      Sequence
0:97        move second child to first child (highp 3-component vector of int)
0:97          'v3' (highp 3-component vector of int)
0:97          Function Call: textureSize(isA21;i1; (highp 3-component vector of int)
0:97            'isamp2DA' (uniform highp isampler2DArray)
0:97            Constant:
0:97              3 (const int)
0:98      move second child to first child (highp 2-component vector of int)
0:98        'v2' (highp 2-component vector of int)
0:98        Function Call: textureSize(s21; (highp 2-component vector of int)
0:98          's2dms' (uniform highp sampler2DMS)
0:99      move second child to first child (highp 2-component vector of int)
0:99        'v2' (highp 2-component vector of int)
0:99        Function Call: imageSize(I21; (highp 2-component vector of int)
0:99          'i2D' (layout(binding=2 ) writeonly uniform highp image2D)
0:?   Linker Objects
0:?     'gl_FragCoord' (smooth in mediump 4-component vector of float)
0:?     'v3' (layout(location=2 ) smooth in mediump 3-component vector of float)
0:?     'yi' (layout(location=2 ) smooth in mediump 4X4 matrix of float)
0:?     'arrayedSampler' (uniform 5-element array of highp sampler2D)
0:?     'usamp2d' (uniform highp usampler2D)
0:?     'samp2dr' (uniform mediump usampler2DRect)
0:?     'isamp2DA' (uniform highp isampler2DArray)
0:?     'c2D' (smooth in mediump 2-component vector of float)
0:?     'i' (uniform mediump int)
0:?     'outp' (out mediump 4-component vector of float)
0:?     's1' (layout(binding=3 ) uniform highp sampler2D)
0:?     's2' (layout(binding=3 ) uniform highp sampler2D)
0:?     'i2D' (layout(binding=2 ) writeonly uniform highp image2D)
0:?     'bbi' (layout(binding=1 column_major shared ) uniform block{layout(column_major shared ) uniform mediump int foo, layout(binding=2 column_major shared ) uniform mediump float f})
0:?     'centroidIn' (centroid smooth in mediump 4-component vector of float)
0:?     'bigl' (uniform mediump 4-component vector of float)
0:?     'bigout1' (layout(location=40 ) out mediump 4-component vector of float)
0:?     'bigout2' (layout(location=40 ) out mediump 4-component vector of float)
0:?     'neg' (out mediump 4-component vector of float)
0:?     'b430i' (layout(column_major std430 ) uniform block{layout(column_major std430 offset=0 ) uniform mediump int i})
0:?     'bshari' (layout(column_major shared ) uniform block{layout(column_major shared ) uniform mediump int i})
0:?     'smoothIn' (smooth in mediump 4-component vector of float)
0:?     'flatIn' (flat in mediump int)
0:?     's2dms' (uniform highp sampler2DMS)
0:?     'bout' (out bool)
0:?     'imageOut' (out highp image2D)
0:?     'mout' (out mediump 2X3 matrix of float)


Linked fragment stage:

ERROR: Linking fragment stage: when more than one fragment shader output, all must have location qualifiers

Shader version: 310
using early_fragment_tests
ERROR: node is still EOpNull!
0:21  Function Definition: main( (void)
0:21    Function Parameters: 
0:23    Sequence
0:23      Sequence
0:23        move second child to first child (highp 4-component vector of float)
0:23          'v' (mediump 4-component vector of float)
0:23          Function Call: texture(s21;vf2; (highp 4-component vector of float)
0:23            indirect index (highp sampler2D)
0:23              'arrayedSampler' (uniform 5-element array of highp sampler2D)
0:23              'i' (uniform mediump int)
0:23            'c2D' (smooth in mediump 2-component vector of float)
0:28      Sequence
0:28        move second child to first child (highp 4-component vector of float)
0:28          'v4' (mediump 4-component vector of float)
0:28          Function Call: textureGather(s21;vf2; (highp 4-component vector of float)
0:28            direct index (highp sampler2D)
0:28              'arrayedSampler' (uniform 5-element array of highp sampler2D)
0:28              Constant:
0:28                0 (const int)
0:28            'c2D' (smooth in mediump 2-component vector of float)
0:29      Sequence
0:29        move second child to first child (mediump 4-component vector of int)
0:29          'iv4' (mediump 4-component vector of int)
0:29          Function Call: textureGatherOffset(isA21;vf3;vi2;i1; (mediump 4-component vector of int)
0:29            'isamp2DA' (uniform highp isampler2DArray)
0:29            Constant:
0:29              0.100000
0:29              0.100000
0:29              0.100000
0:29            Constant:
0:29              1 (const int)
0:29              1 (const int)
0:29            Constant:
0:29              3 (const int)
0:30      move second child to first child (mediump 4-component vector of int)
0:30        'iv4' (mediump 4-component vector of int)
0:30        Function Call: textureGatherOffset(isA21;vf3;vi2;i1; (mediump 4-component vector of int)
0:30          'isamp2DA' (uniform highp isampler2DArray)
0:30          Constant:
0:30            0.100000
0:30            0.100000
0:30            0.100000
0:30          Constant:
0:30            1 (const int)
0:30            1 (const int)
0:30          'i' (uniform mediump int)
0:31      move second child to first child (mediump 4-component vector of int)
0:31        'iv4' (mediump 4-component vector of int)
0:31        Function Call: textureGatherOffset(isA21;vf3;vi2;i1; (mediump 4-component vector of int)
0:31          'isamp2DA' (uniform highp isampler2DArray)
0:31          Constant:
0:31            0.100000
0:31            0.100000
0:31            0.100000
0:31          Constant:
0:31            1 (const int)
0:31            1 (const int)
0:31          Constant:
0:31            4 (const int)
0:32      move second child to first child (mediump 4-component vector of int)
0:32        'iv4' (mediump 4-component vector of int)
0:32        Function Call: textureGatherOffset(isA21;vf3;vi2;i1; (mediump 4-component vector of int)
0:32          'isamp2DA' (uniform highp isampler2DArray)
0:32          Constant:
0:32            0.100000
0:32            0.100000
0:32            0.100000
0:32          Constant:
0:32            1 (const int)
0:32            1 (const int)
0:32          Constant:
0:32            3 (const int)
0:33      move second child to first child (mediump 4-component vector of int)
0:33        'iv4' (mediump 4-component vector of int)
0:33        Function Call: textureGatherOffset(isA21;vf3;vi2; (mediump 4-component vector of int)
0:33          'isamp2DA' (uniform highp isampler2DArray)
0:33          Constant:
0:33            0.100000
0:33            0.100000
0:33            0.100000
0:33          Construct ivec2 (2-component vector of int)
0:33            'i' (uniform mediump int)
0:38  Function Definition: foo23( (void)
0:38    Function Parameters: 
0:?     Sequence
0:42      Function Call: textureProjGradOffset(us21;vf4;vf2;vf2;vi2; (mediump 4-component vector of uint)
0:42        'usamp2d' (uniform highp usampler2D)
0:42        'outp' (out mediump 4-component vector of float)
0:42        Constant:
0:42          0.000000
0:42          0.000000
0:42        Constant:
0:42          0.000000
0:42          0.000000
0:42        Convert float to int (2-component vector of int)
0:42          'c2D' (smooth in mediump 2-component vector of float)
0:43      Function Call: textureProjGradOffset(us21;vf4;vf2;vf2;vi2; (mediump 4-component vector of uint)
0:43        'usamp2d' (uniform highp usampler2D)
0:43        'outp' (out mediump 4-component vector of float)
0:43        Constant:
0:43          0.000000
0:43          0.000000
0:43        Constant:
0:43          0.000000
0:43          0.000000
0:43        Constant:
0:43          3 (const int)
0:43          4 (const int)
0:44      Function Call: textureProjGradOffset(us21;vf4;vf2;vf2;vi2; (mediump 4-component vector of uint)
0:44        'usamp2d' (uniform highp usampler2D)
0:44        'outp' (out mediump 4-component vector of float)
0:44        Constant:
0:44          0.000000
0:44          0.000000
0:44        Constant:
0:44          0.000000
0:44          0.000000
0:44        Constant:
0:44          15 (const int)
0:44          16 (const int)
0:45      Function Call: textureProjGradOffset(us21;vf4;vf2;vf2;vi2; (mediump 4-component vector of uint)
0:45        'usamp2d' (uniform highp usampler2D)
0:45        'outp' (out mediump 4-component vector of float)
0:45        Constant:
0:45          0.000000
0:45          0.000000
0:45        Constant:
0:45          0.000000
0:45          0.000000
0:45        Constant:
0:45          -10 (const int)
0:45          20 (const int)
0:47      Test condition and select (void)
0:47        Condition
0:47        'gl_HelperInvocation' (in bool)
0:47        true case
0:48        Pre-Increment (mediump 4-component vector of float)
0:48          'outp' (out mediump 4-component vector of float)
0:50      Sequence
0:50        move second child to first child (mediump int)
0:50          'sum' (mediump int)
0:50          Constant:
0:50            32 (const int)
0:58      move second child to first child (bool)
0:58        'b1' (bool)
0:58        mix (bool)
0:58          'b2' (bool)
0:58          'b3' (bool)
0:58          'b' (bool)
0:59      Sequence
0:59        move second child to first child (mediump 3-component vector of uint)
0:59          'um3' (mediump 3-component vector of uint)
0:59          mix (mediump 3-component vector of uint)
0:59            Construct uvec3 (mediump 3-component vector of uint)
0:59              Convert int to uint (mediump uint)
0:59                'i' (uniform mediump int)
0:59            Construct uvec3 (mediump 3-component vector of uint)
0:59              Convert int to uint (mediump uint)
0:59                'i' (uniform mediump int)
0:59            Construct bvec3 (3-component vector of bool)
0:59              'b' (bool)
0:60      Sequence
0:60        move second child to first child (mediump 4-component vector of int)
0:60          'im4' (mediump 4-component vector of int)
0:60          mix (mediump 4-component vector of int)
0:60            Construct ivec4 (mediump 4-component vector of int)
0:60              'i' (uniform mediump int)
0:60            Construct ivec4 (mediump 4-component vector of int)
0:60              'i' (uniform mediump int)
0:60            Construct bvec4 (4-component vector of bool)
0:60              'b' (bool)
0:94  Function Definition: foots( (void)
0:94    Function Parameters: 
0:96    Sequence
0:96      Sequence
0:96        move second child to first child (highp 2-component vector of int)
0:96          'v2' (highp 2-component vector of int)
0:96          Function Call: textureSize(s21;i1; (highp 2-component vector of int)
0:96            's1' (layout(binding=3 ) uniform highp sampler2D)
0:96            Constant:
0:96              2 (const int)
0:97      Sequence
0:97        move second child to first child (highp 3-component vector of int)
0:97          'v3' (highp 3-component vector of int)
0:97          Function Call: textureSize(isA21;i1; (highp 3-component vector of int)
0:97            'isamp2DA' (uniform highp isampler2DArray)
0:97            Constant:
0:97              3 (const int)
0:98      move second child to first child (highp 2-component vector of int)
0:98        'v2' (highp 2-component vector of int)
0:98        Function Call: textureSize(s21; (highp 2-component vector of int)
0:98          's2dms' (uniform highp sampler2DMS)
0:99      move second child to first child (highp 2-component vector of int)
0:99        'v2' (highp 2-component vector of int)
0:99        Function Call: imageSize(I21; (highp 2-component vector of int)
0:99          'i2D' (layout(binding=2 ) writeonly uniform highp image2D)
0:?   Linker Objects
0:?     'gl_FragCoord' (smooth in mediump 4-component vector of float)
0:?     'v3' (layout(location=2 ) smooth in mediump 3-component vector of float)
0:?     'yi' (layout(location=2 ) smooth in mediump 4X4 matrix of float)
0:?     'arrayedSampler' (uniform 5-element array of highp sampler2D)
0:?     'usamp2d' (uniform highp usampler2D)
0:?     'samp2dr' (uniform mediump usampler2DRect)
0:?     'isamp2DA' (uniform highp isampler2DArray)
0:?     'c2D' (smooth in mediump 2-component vector of float)
0:?     'i' (uniform mediump int)
0:?     'outp' (out mediump 4-component vector of float)
0:?     's1' (layout(binding=3 ) uniform highp sampler2D)
0:?     's2' (layout(binding=3 ) uniform highp sampler2D)
0:?     'i2D' (layout(binding=2 ) writeonly uniform highp image2D)
0:?     'bbi' (layout(binding=1 column_major shared ) uniform block{layout(column_major shared ) uniform mediump int foo, layout(binding=2 column_major shared ) uniform mediump float f})
0:?     'centroidIn' (centroid smooth in mediump 4-component vector of float)
0:?     'bigl' (uniform mediump 4-component vector of float)
0:?     'bigout1' (layout(location=40 ) out mediump 4-component vector of float)
0:?     'bigout2' (layout(location=40 ) out mediump 4-component vector of float)
0:?     'neg' (out mediump 4-component vector of float)
0:?     'b430i' (layout(column_major std430 ) uniform block{layout(column_major std430 offset=0 ) uniform mediump int i})
0:?     'bshari' (layout(column_major shared ) uniform block{layout(column_major shared ) uniform mediump int i})
0:?     'smoothIn' (smooth in mediump 4-component vector of float)
0:?     'flatIn' (flat in mediump int)
0:?     's2dms' (uniform highp sampler2DMS)
0:?     'bout' (out bool)
0:?     'imageOut' (out highp image2D)
0:?     'mout' (out mediump 2X3 matrix of float)

